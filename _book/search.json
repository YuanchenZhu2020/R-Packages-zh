[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Packages (2e)",
    "section": "",
    "text": "欢迎！\n欢迎来到由 Hadley Wickham 和 Jennifer Bryan 等撰写的 R Package。 软件包（Packages）是可复用 R 代码的基本单位。 它们包含可复用的 R 函数、描述如何使用这些函数的文档以及示例数据。在本书中，你将学习如何将你的代码变成别人能够轻松下载和使用的软件包。刚开始编写软件包可能会让人感觉无从下手。因此我们从基础的内容开始，逐渐提升我们的开发水平。你的第一个版本是否完美并不重要，只要下一版本变得更完善就好。\n这是本书的第二版，仍在开发编撰中。"
  },
  {
    "objectID": "translator-preface.html#翻译说明",
    "href": "translator-preface.html#翻译说明",
    "title": "翻译与排版说明",
    "section": "翻译说明",
    "text": "翻译说明\n将英文技术书籍翻译为中文是个痛苦的过程，难以避免地会遇到一些没有公认翻译方式的英文词汇，或者是有公认的中文翻译词汇，但该词过于口语化，或者不能很好地反映英文词汇的意思。这些英文词汇以及它们在书中的对应中文词汇将在下方列出，欢迎大家批评。\n\n\n英文词汇\n中文翻译\n原因\n\n\n\npackage\n软件包，程序包\nr packages 是一组用来完成特定任务的程序，作为 R 的补充，符合 Software Package 的定义。\n\n\nconscious uncoupling\n有意识地解耦\n这个词最初用于描述相对友好的离婚1，这里使用“有意识地”而非“相对友好的”以突出该决定是经过慎重考虑和精心设计的。\n\n\nThe Whole Game\n整体流程\n软件包构建的一个 toy example，这里采用意译。\n\n\nThe package within\n软件包中的奥秘；包中奥秘\n直译过来是“软件包的内部”，感觉过于平淡，使用更吸引人的翻译。"
  },
  {
    "objectID": "translator-preface.html#排版说明",
    "href": "translator-preface.html#排版说明",
    "title": "翻译与排版说明",
    "section": "排版说明",
    "text": "排版说明\n由于书中不可避免地会同时出现中文和英文，因此原书的排版并不完全适用于中文翻译版。为了在尊重原书的基础上使页面变得美观，约定如下排版要求：\n\n英文单词、标点符号和数字各具有 1 个前导空格和 1 个后导空格。例如：“软件包的名称是 bookdown 吗。”。\n\n英文单词、标点和数字的一侧为标点符号时，该侧无空格。例如：“使用 Leading and Trailing Spaces。”。\n\n\n需要展示并链接 URL 时，将其放入尖括号内 &lt;&gt;。\n小括号内的文本包含中文时，使用中文小括号 （）；如果全是英文文本，则使用英文小括号 ()，并各具有 1 个前导和后导空格。\n书中某些操作中带有选项、菜单等名称，在实际操作时不具有中文翻译，此时列出该单词的中文翻译，后跟括号，括号内展示原英文单词。中文翻译便于读者查询相关资料，原英文单词便于按图索骥地进行操作。"
  },
  {
    "objectID": "translator-preface.html#翻译进度",
    "href": "translator-preface.html#翻译进度",
    "title": "翻译与排版说明",
    "section": "翻译进度",
    "text": "翻译进度\n常言道，人生未填之坑十之八九。笔者学业繁忙，只能利用空闲时间翻译本书。因此在这里记录一下翻译进度，欢迎加入本项目提交 Pull Request。\n符号说明：\n\n✅：已完成\n⚙️：进行中\n📄：计划中\n\n\n\n章节\n是否翻译\n是否润色\n\n\n\nwelcome\n✅\n✅\n\n\nPreface\n✅\n✅\n\n\nIntroduction\n⚙️\n\n\n\nThe Whole Game\n⚙️\n\n\n\nSystem setup\n\n\n\n\nPackage structure and state\n\n\n\n\nFundamental development workflows\n\n\n\n\nThe package within\n\n\n\n\nR Code\n\n\n\n\nData\n\n\n\n\nOther components\n\n\n\n\nDESCRIPTION\n\n\n\n\nDependencies: Mindset and Background\n\n\n\n\nDependencies: In Practice\n\n\n\n\nLicensing\n\n\n\n\nTesting basics\n\n\n\n\nDesigning your test suite\n\n\n\n\nAdvanced testing techniques\n\n\n\n\nFunction documentation\n\n\n\n\nVignettes\n\n\n\n\nOther markdown files\n\n\n\n\nWebsite\n\n\n\n\nSoftware development practices\n\n\n\n\nLifecycle\n\n\n\n\nReleasing to CRAN\n\n\n\n\nReferences\n\n\n\n\nAppendix A R CND check"
  },
  {
    "objectID": "translator-preface.html#footnotes",
    "href": "translator-preface.html#footnotes",
    "title": "翻译与排版说明",
    "section": "",
    "text": "见 https://en.wikipedia.org/wiki/Conscious_uncoupling↩︎"
  },
  {
    "objectID": "preface.html#致谢",
    "href": "preface.html#致谢",
    "title": "前言",
    "section": "致谢",
    "text": "致谢\n自从 R Packages 第一版发布以来，支持本书描述的工作流的软件包已经有了广泛的发展。 最初的三个软件包 devtools, roxygen2 和 testthat 已经扩展到由 devtools “有意识地解耦”所创建的许多软件包，就如 ?sec-setup-usage 所描述的那样。 由于它们具有共同的根源 devtools，因此这些软件包多数源自 Hadley Wickham (HW)。 还有许多其他重要的贡献者，其中许多人现在是软件包的维护者：\n\ndevtools: HW, Winston Chang, Jim Hester (maintainer, &gt;= v1.13.5), Jennifer Bryan (maintainer &gt;= v2.4.3)\nusethis: HW, Jennifer Bryan (maintainer &gt;= v1.5.0), Malcolm Barrett\nroxygen2: HW (maintainer), Peter Danenburg, Manuel Eugster\n\ntestthat: HW (maintainer)\ndesc: Gábor Csárdi (maintainer), Kirill Müller, Jim Hester\n\npkgbuild: HW, Jim Hester, Gábor Csárdi (maintainer &gt;= v1.2.1)\npkgload: HW, Jim Hester, Winston Chang, Lionel Henry (maintainer &gt;= v1.2.4)\nrcmdcheck: Gábor Csárdi (maintainer)\nremotes: HW, Jim Hester, Gábor Csárdi (maintainer), Winston Chang, Martin Morgan, Dan Tenenbaum\n\nrevdepcheck: HW, Gábor Csárdi (maintainer)\nsessioninfo: HW, Gábor Csárdi (maintainer), Winston Chang, Robert Flight, Kirill Müller, Jim Hester\n\n\n这本书是公开编写和修订的，它是社区努力的成果：许多人阅读草稿、修正错别字 、提出改进意见以及贡献内容。 没有这些贡献者，这本书不会像现在这样好，我们对他们的帮助深表感谢。 我们要感谢我们在 Posit 的同事，特别是 tidyverse 团队，他们一直很乐意讨论软件包的开发实践。 另外，我们出色的技术审查员团队提出的建议也极大地改进了本书：Malcolm Barrett, Laura DeCicco, Zhian Kamvar, Tom Mock and Maëlle Salmon。\nThanks go to all contributors who submitted improvements via github (in alphabetical order): @aaronwolen, @ablejec, Adam Yormark, @adessy, Adrien Todeschini, Alan Haynes, Alexander Grüneberg, Alison Presmanes Hill, Andrea Cantieni, Andrew Bray, Andrew Craig, Andy Teucher, Andy Visser, @apomatix, Arni Magnusson, Ben Bond-Lamberty, Ben Marwick, Berry Boessenkool, @bm5tev3, Brandon Greenwell, Brett Johnson, Brett K, Brett Klamer, Brian Rice, Brooke Anderson, @btruel, @CAPN, Carl A. B. Pearson, Chao Cheng, Chester Ismay, Choyoung Yim, @chsafouane, @contravariant, Craig Citro, Crt Ahlin, Dan Yavorsky, @danhalligan, Daniel Falbel, Daniel Lee, David Robinson, David Smith, @davidkane9, Dean Attali, @deanbodenhambsse, Douglas K. G. Araujo, @dracodoc, @dryzliang, Earl Brown, Eduardo Ariño de la Rubia, @eipi10, Enrico Spinielli, @eogoodwin, Erik Erhardt, Ewan Dunbar, Federico Marini, Florian Kohrt, Floris Vanderhaeghe, Gerhard Nachtmann, Gerrit-Jan Schutten, Greg Macfarlane, Gustav W Delius, Hadley Wickham, Hannah Frick, @harrismcgehee, Hedderik van Rijn, @helix123, @henningte, Henrik Bengtsson, @heogden, Howard Baek, Hugo Gruson, Ian Gow, @iargent, Iaroslav Domin, Ibrahim Kekec, Ionut Stefan-Birdea, @jacobbien, James Keirstead, James Laird-Smith, Jee Roen, Jennifer (Jenny) Bryan, Jenny Bryan, @Jeremiah, Jim Hester, @jmarshallnz, Jo-Anne Tan, Joanna Zhao, Joe Cainey, Joe Thorley, Johan Larsson, John Baumgartner, John Blischak, @jomuller, Jon Harmon, @Jordan, @jowalski, Justin Alford, Karl Broman, Karthik Ram, @Kasper, @KatherineCox, Katrin Leinweber, Kevin Ushey, Kevin Wright, Kirill Müller, Kristopher Kapphahn, Kun Ren, @kwenzig, @kylelundstedt, @lancelote, Lech Madeyski, @Leon, @lindbrook, Lluis Ramon, Maëlle Salmon, @maiermarco, Malcolm Barrett, Manuel Reif, Mara Averick, Mark Dulhunty, @martin-mfg, Matan Hakim, Matthew Roberts, Mauro Lepore, Michael Boerman, Michael Buckley, @michaelweylandt, Michel Lang, @miguelmorin, @MikeJohnPage, @MikeLeonard, @nareal, Nathan Levett, Nathaniel Phillips, @nattalides, @Nic, Nicholas Tierney, Nick Carchedi, Nick Zeng, @NS, Oliver Keyes, Øystein Sørensen, Pablo Rodríguez-Sánchez, Patrick Kimes, Paul Blischak, Peter Meissner, @PeterDee, Philip Crain, Philip Pallmann, Po Su, @PrzeChoj, R. Mark Sharp, @ramiromagno, Richard M. Smith, Rick Tankard, @rmar073, @rmsharp, Robert Krzyzanowski, Robin Gower, @robiRagan, Ryan Peterson, @ryanatanner, Salim B, Sam Firke, Sascha Holzhauer, @scharne, Scott Rohde, Sean Wilkinson, Sébastien Rochette, Sergey Grechin, @setoyama60jp, Shannon Pileggi, Shantanu Singh, Shaun Walbridge, Shinya Uryu, @SimonPBiggs, Stefan Eng, Stefan Herzog, Stefan Jansson, Stefan Widgren, Stephen Frank, Stephen Rushe, @stevensbr, Tanner Stauss, Telmo Brugnara, Tony Breyal, Tony Fischetti, @TroyVan, @urmils, Vince Knight, Vlad Petyuk, Wenjie Wang, Will Beasley, Winston Chang, @winterschlaefer, Wouter Saelens, @wrathematics, Xiaosong Zhang, Y. Yu, Yihui Xie, @ysdgroot, @yui-knk, Zeki Akyol, @zhaoy, Zhian N. Kamvar, Zhuoer Dong."
  },
  {
    "objectID": "preface.html#conventions",
    "href": "preface.html#conventions",
    "title": "前言",
    "section": "Conventions",
    "text": "Conventions\n在本书中，我们用 fun() 来指代函数，用 var 来指代变量和函数参数，用 path/ 来指代路径。\n较大的代码块同时包含输入和输出。 代码输出的内容都被注释了，因此如果你有本书的电子版本，例如 https://r-pkgs.org，就可以轻松地将示例代码复制和粘贴到 R 中。 输出内容的注释看起来像 #&gt;，这样可以和普通注释区别开来。"
  },
  {
    "objectID": "preface.html#colophon",
    "href": "preface.html#colophon",
    "title": "前言",
    "section": "Colophon",
    "text": "Colophon\n本书是在 RStudio 中使用 Quarto 编写的。 本书 官方网站 由 Netlify 托管，并使用 GitHub actions 在每次提交后自动更新。 完整的源代码可以在 GitHub 上找到\n本书的当前版本是在如下环境下构建的：\n\nlibrary(devtools)\n#&gt; Warning: package 'devtools' was built under R version 4.2.2\n#&gt; Loading required package: usethis\n#&gt; Warning: package 'usethis' was built under R version 4.2.2\nlibrary(roxygen2)\n#&gt; Warning: package 'roxygen2' was built under R version 4.2.3\nlibrary(testthat)\n#&gt; Warning: package 'testthat' was built under R version 4.2.2\n#&gt; \n#&gt; Attaching package: 'testthat'\n#&gt; The following object is masked from 'package:devtools':\n#&gt; \n#&gt;     test_file\ndevtools::session_info()\n#&gt; ─ Session info ───────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.2.1 (2022-06-23 ucrt)\n#&gt;  os       Windows 10 x64 (build 22000)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language (EN)\n#&gt;  collate  Chinese (Simplified)_China.utf8\n#&gt;  ctype    Chinese (Simplified)_China.utf8\n#&gt;  tz       Asia/Taipei\n#&gt;  date     2023-05-07\n#&gt;  pandoc   3.1 @ D:/Program Files/Pandoc/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ───────────────────────────────────────────────────────\n#&gt;  package     * version date (UTC) lib source\n#&gt;  brio          1.1.3   2021-11-30 [1] CRAN (R 4.2.2)\n#&gt;  cachem        1.0.6   2021-08-19 [1] CRAN (R 4.2.1)\n#&gt;  callr         3.7.3   2022-11-02 [1] CRAN (R 4.2.3)\n#&gt;  cli           3.6.1   2023-03-23 [1] CRAN (R 4.2.3)\n#&gt;  crayon        1.5.1   2022-03-26 [1] CRAN (R 4.2.1)\n#&gt;  devtools    * 2.4.5   2022-10-11 [1] CRAN (R 4.2.2)\n#&gt;  digest        0.6.29  2021-12-01 [1] CRAN (R 4.2.1)\n#&gt;  ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.2.1)\n#&gt;  evaluate      0.21    2023-05-05 [1] CRAN (R 4.2.1)\n#&gt;  fastmap       1.1.0   2021-01-25 [1] CRAN (R 4.2.1)\n#&gt;  fs            1.6.2   2023-04-25 [1] CRAN (R 4.2.3)\n#&gt;  glue          1.6.2   2022-02-24 [1] CRAN (R 4.2.1)\n#&gt;  htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.2.3)\n#&gt;  htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.2.3)\n#&gt;  httpuv        1.6.6   2022-09-08 [1] CRAN (R 4.2.1)\n#&gt;  jsonlite      1.8.4   2022-12-06 [1] CRAN (R 4.2.3)\n#&gt;  knitr         1.42    2023-01-25 [1] CRAN (R 4.2.3)\n#&gt;  later         1.3.0   2021-08-18 [1] CRAN (R 4.2.1)\n#&gt;  lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.2.2)\n#&gt;  magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.2.1)\n#&gt;  memoise       2.0.1   2021-11-26 [1] CRAN (R 4.2.1)\n#&gt;  mime          0.12    2021-09-28 [1] CRAN (R 4.2.0)\n#&gt;  miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.2.1)\n#&gt;  pkgbuild      1.4.0   2022-11-27 [1] CRAN (R 4.2.3)\n#&gt;  pkgload       1.3.2   2022-11-16 [1] CRAN (R 4.2.3)\n#&gt;  prettyunits   1.1.1   2020-01-24 [1] CRAN (R 4.2.1)\n#&gt;  processx      3.8.1   2023-04-18 [1] CRAN (R 4.2.3)\n#&gt;  profvis       0.3.7   2020-11-02 [1] CRAN (R 4.2.2)\n#&gt;  promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.2.1)\n#&gt;  ps            1.7.1   2022-06-18 [1] CRAN (R 4.2.1)\n#&gt;  purrr         1.0.1   2023-01-10 [1] CRAN (R 4.2.3)\n#&gt;  R6            2.5.1   2021-08-19 [1] CRAN (R 4.2.1)\n#&gt;  Rcpp          1.0.9   2022-07-08 [1] CRAN (R 4.2.1)\n#&gt;  remotes       2.4.2   2021-11-30 [1] CRAN (R 4.2.1)\n#&gt;  rlang         1.1.1   2023-04-28 [1] CRAN (R 4.2.3)\n#&gt;  rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.2.3)\n#&gt;  roxygen2    * 7.2.3   2022-12-08 [1] CRAN (R 4.2.3)\n#&gt;  rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.2.3)\n#&gt;  sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.2.2)\n#&gt;  shiny         1.7.2   2022-07-19 [1] CRAN (R 4.2.1)\n#&gt;  stringi       1.7.8   2022-07-11 [1] CRAN (R 4.2.1)\n#&gt;  stringr       1.5.0   2022-12-02 [1] CRAN (R 4.2.3)\n#&gt;  testthat    * 3.1.5   2022-10-08 [1] CRAN (R 4.2.2)\n#&gt;  tinytex       0.45    2023-04-18 [1] CRAN (R 4.2.3)\n#&gt;  urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.2.2)\n#&gt;  usethis     * 2.1.6   2022-05-25 [1] CRAN (R 4.2.2)\n#&gt;  vctrs         0.6.2   2023-04-19 [1] CRAN (R 4.2.3)\n#&gt;  xfun          0.39    2023-04-20 [1] CRAN (R 4.2.3)\n#&gt;  xml2          1.3.3   2021-11-30 [1] CRAN (R 4.2.1)\n#&gt;  xtable        1.8-4   2019-04-21 [1] CRAN (R 4.2.1)\n#&gt; \n#&gt;  [1] D:/R/R-4.2.1/library\n#&gt; \n#&gt; ──────────────────────────────────────────────────────────────────\n\n\n\n\n\nMüller, Kirill, and Lorenz Walthert. 2018. Styler: Non-Invasive Pretty Printing of R Code. http://styler.r-lib.org."
  },
  {
    "objectID": "introduction.html#sec-intro-phil",
    "href": "introduction.html#sec-intro-phil",
    "title": "1  简介",
    "section": "\n1.1 Philosophy",
    "text": "1.1 Philosophy\nThis book espouses our philosophy of package development: anything that can be automated, should be automated. Do as little as possible by hand. Do as much as possible with functions. The goal is to spend your time thinking about what you want your package to do rather than thinking about the minutiae of package structure.\nThis philosophy is realized primarily through the devtools package, which is the public face for a suite of R functions that automate common development tasks. The release of version 2.0.0 in October 2018 marked its internal restructuring into a set of more focused packages, with devtools becoming more of a meta-package. The usethis package is the sub-package you are most likely to interact with directly; we explain the devtools-usethis relationship in ?sec-setup-usage.\nAs always, the goal of devtools is to make package development as painless as possible. It encapsulates the best practices developed by Hadley Wickham, initially from his years as a prolific solo developer. More recently, he has assembled a team of developers at Posit (formerly known as RStudio), who collectively look after hundreds of open source R packages, including those known as the tidyverse. The reach of this team allows us to explore the space of all possible mistakes at an extraordinary scale. Fortunately, it also affords us the opportunity to reflect on both the successes and failures, in the company of expert and sympathetic colleagues. We try to develop practices that make life more enjoyable for both the maintainer and users of a package. The devtools meta-package is where these lessons are made concrete.\ndevtools works hand-in-hand with RStudio, which we believe is the best development environment for most R users. The most popular alternative to RStudio is currently Visual Studio Code (VS Code) with the R extension enabled. This can be a rewarding and powerful environment, however it does require a bit more work to set up and customize1.\n\n\n\n\n\n\nRStudio\n\n\n\nThroughout the book, we highlight specific ways that RStudio can expedite your package development workflow, in specially formatted sections like this.\n\n\nTogether, devtools and RStudio insulate you from the low-level details of how packages are built. As you start to develop more packages, we highly recommend that you learn more about those details. The best resource for the official details of package development is always the official writing R extensions manual2. However, this manual can be hard to understand if you’re not already familiar with the basics of packages. It’s also exhaustive, covering every possible package component, rather than focusing on the most common and useful components, as this book does. Writing R extensions is a useful resource once you’ve mastered the basics and want to learn what’s going on under the hood."
  },
  {
    "objectID": "introduction.html#intro-outline",
    "href": "introduction.html#intro-outline",
    "title": "1  简介",
    "section": "\n1.2 In this book",
    "text": "1.2 In this book\nThe first part of the book is all about giving you all the tools you need to start your package development journey and we highly recommend that you read it in order. We begin in ?sec-whole-game with a run through the complete development of a small package. It’s meant to paint the big picture and suggest a workflow, before we descend into the detailed treatment of the key components of an R package. Then in ?sec-setup you’ll learn how to prepare your system for package development, and in ?sec-package-structure-state you’ll learn the basic structure of a package and how that varies across different states. Next, in ?sec-workflow101, we’ll cover the core workflows that come up repeatedly for package developers. The first part of the book ends with another case study (?sec-package-within), this time focusing on how you might convert a script to a package and discussing the challenges you’ll face along the way.\nThe remainder of the book is designed to be read as needed. Pick and choose between the chapters as the various topics come up in your development process.\nFirst we cover key package components: ?sec-r discusses where your code lives and how to organize it, ?sec-data shows you how to include data in your package, and ?sec-misc covers a few less important files and directories that need to be discussed somewhere.\nNext we’ll dive into to the package metadata, starting with DESCRIPTION in ?sec-description. We’ll then go deep into dependencies. In ?sec-dependencies-mindset-background, we’ll cover the costs and benefits of taking on dependencies and provide some technical background on package namespaces and the search path. In ?sec-dependencies-in-practice, we focus on practical matters, such as how to use different types of dependencies in different parts of your package. This is also where we discuss exporting functions, which is what makes it possible for other packages and projects to depend on your package. We’ll finish off this part with a look at licensing in ?sec-license.\nTo ensure your package works as designed (and continues to work as you make changes), it’s essential to test your code, so the next three chapters cover the art and science of testing. ?sec-testing-basics gets you started with the basics of testing with the testthat package. ?sec-testing-design teaches you how to design and organise tests in the most effective way. Then we finish off our coverage of testing in ?sec-testing-advanced which teaches you advanced skills to tackle challenging situations.\nIf you want other people (including future-you!) to understand how to use the functions in your package, you’ll need to document them. ?sec-man gets you started using roxygen2 to document the functions in your package. Function documentation is only helpful if you know what function to look up, so next in ?sec-vignettes we’ll discuss vignettes, which help you document the package as a whole. We’ll finish up documentation with a discussion of other important markdown files like README.md and NEWS.md in ?sec-other-markdown, and creating a package website with pkgdown in ?sec-website.\nThe book concludes by zooming back out to consider development practices, such as the benefit of using version control and continuous integration (?sec-sw-dev-practices). We wrap things up by discussing the lifecycle (?sec-lifecycle) of a package, including releasing it on CRAN (?sec-release).\nThis is a lot to learn, but don’t feel overwhelmed. Start with a minimal subset of useful features (e.g. just an R/ directory!) and build up over time. To paraphrase the Zen monk Shunryu Suzuki: “Each package is perfect the way it is — and it can use a little improvement”."
  },
  {
    "objectID": "introduction.html#whats-not-here",
    "href": "introduction.html#whats-not-here",
    "title": "1  简介",
    "section": "\n1.3 What’s not here",
    "text": "1.3 What’s not here\nThere are also specific practices that have little to no treatment here simply because we do not use them enough to have any special insight. Does this mean that we actively discourage those practices? Probably not, as we try to be explicit about practices we think you should avoid. So if something is not covered here, it just means that a couple hundred heavily-used R packages are built without meaningful reliance on that technique. That observation should motivate you to evaluate how likely it is that your development requirements truly don’t overlap with ours. But sometimes the answer is a clear “yes”, in which case you’ll simply need to consult another resource.\n\n\n\n\nMarwick, Ben, Carl Boettiger, and Lincoln Mullen. 2018a. “Packaging Data Analytical Work Reproducibly Using r (and Friends).” The American Statistician 72 (1): 80–88. https://doi.org/10.1080/00031305.2017.1375986.\n\n\n———. 2018b. “Packaging Data Analytical Work Reproducibly Using r (and Friends).” PeerJ Preprints 6 (March): e3192v2. https://doi.org/10.7287/peerj.preprints.3192v2."
  },
  {
    "objectID": "introduction.html#footnotes",
    "href": "introduction.html#footnotes",
    "title": "1  简介",
    "section": "",
    "text": "Users of Emacs Speaks Statistics (ESS) will find that many of the workflows described in this book are also available there. For those loyal to vim, we recommend the Nvim-R plugin.↩︎\nYou might also enjoy the “quarto-ized” version at https://rstudio.github.io/r-manuals/r-exts/.↩︎"
  }
]